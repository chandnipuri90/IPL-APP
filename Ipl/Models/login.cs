//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.ComponentModel.DataAnnotations;
namespace Ipl.Models
{
    using System;
    using System.Collections.Generic;

    //here i have to make required validation is commented because i have made only one table which is login for login and signup as well so when i apply required validation to all fields of login model then at time of login it only get username and password from user but other fields are set to null so login is not bind due to null values so that is why i have to make required validations for all fields are commented but 
    //but this is not the right solution the right solution is to make two tables seprately one for signup and login 




    public partial class login
    {
        public int login_id { get; set; }  
        //[Required (ErrorMessage = "Please enter the valid Username")]
        [RegularExpression(@"^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$",
        ErrorMessage = "Please enter valid UserName.")]
        public string username { get; set; }

       // [Required(ErrorMessage = "Password is required.")]
        [RegularExpression("([a-z]|[A-Z]|[0-9]|[\\W]){4}[a-zA-Z0-9\\W]{3,11}", ErrorMessage = "Invalid password format")]
        public string userpwd { get; set; }

       // [Required(ErrorMessage = "Please enter the valid FirstName")]
        public string First_Name { get; set; }

       // [Required(ErrorMessage = "Please enter the valid LastName")]
        public string Last_Name { get; set; }

      //  [Required(ErrorMessage = "Please enter the valid DateOfBirth")]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> Birth_Date { get; set; }

        public string Usertype { get; set; }

        [DataType(DataType.PhoneNumber)]
        [Display(Name = "Phone Number")]
       // [Required(ErrorMessage = "Phone Number Required!")]
        [RegularExpression(@"^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$",
                   ErrorMessage = "Entered phone format is not valid.")]
        public string Mobile { get; set; }

        public bool RememberMe { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<System.DateTime> LastLoginDate { get; set; }
        public Nullable<bool> IsActive { get; set; }
    }
}
